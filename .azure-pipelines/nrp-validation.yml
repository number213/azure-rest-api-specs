# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr:
  branches:
    include:
      - network-*

pool:
  vmImage: 'vs2017-win2016'

steps:
  - powershell: |
      & "C:/Program Files (x86)/Microsoft SDKs/Windows/v10.0A/bin/NETFX 4.6.1 Tools/sn.exe" -Vr *,31bf3856ad364e35
    displayName: "Bypass Strong Name validation"
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
  - powershell: |
      & "npm" install autorest -g
    displayName: "Install autorest"
  - script: git clone --depth 1 -- https://dev.azure.com/v-anevse/BuildScripts/_git/BuildScripts
    displayName: 'Clone build tools'
  - powershell: |
      $env:NRP_BUILD_TOOLS_SKIP_GENERATE_PS1 = $true
      $swgrPath = (Get-Item ".\").FullName
      .\BuildScripts\src\Azure.Client.Automation.Toolkit\Automation\build-tools\Test-SwaggerRelease.ps1 -Component Network -SwaggerRepoPath $swgrPath -OutputFolder .\Out
    failOnStderr: false
    displayName: 'Test Swagger Updates'
  - powershell: |
      $outputPath = ".\Out"
      if(-not (Test-Path $outputPath)) { New-Item -Path $outputPath -ItemType "Directory" -Force }
      Copy-Item ".\BuildScripts\src\Azure.Client.Automation.Toolkit\Automation\build-tools\.azure-pipelines\.artifactignore" -Destination "${outputPath}\.artifactignore" -Force -ErrorAction "SilentlyContinue"
    failOnStderr: false
    condition: always()
    displayName: 'Copy .artifactignore'
  - task: PublishPipelineArtifact@0
    condition: always()
    inputs:
      artifactName: 'SwaggerTestOutput'
      targetPath: '.\Out'
